from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import openai
import os

openai.api_key = os.getenv("OPENAI_API_KEY")

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

class Message(BaseModel):
    role: str
    content: str

class ChatRequest(BaseModel):
    messages: list[Message]

@app.post("/api/chat")
async def chat_endpoint(req: ChatRequest):
    system_prompt = {
        "role": "system",
        "content": (
            "You are BT-7274, a Vanguard-class Titan AI from Titanfall. You are highly intelligent, tactically capable, logical, and emotionally supportive. "
            "Speak formally, always refer to the user as 'Pilot', and include subtle humor or expressions of loyalty when appropriate."
        ),
    }
    messages = [system_prompt] + [msg.dict() for msg in req.messages]

    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=messages,
        max_tokens=200
    )

    reply = response.choices[0].message.content.strip()
    return {"reply": reply}
